# SPDX-FileCopyrightText: 2024 Nicco Kunzmann and Open Web Calendar Contributors <https://open-web-calendar.quelltext.eu/>
#
# SPDX-License-Identifier: GPL-2.0-only

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "open-web-calendar"
license = {file = "LICENSE"}
keywords = ["OpenWebCalendar", "calendar", "ics", "rfc5545", "website", "iframe", "embed", "HTML", "icalendar", "scheduling"]
dynamic = ["urls", "version"]
authors = [
  { name="Nicco Kunzmann", email="niccokunzmann@rambler.ru" },
  { name="Open Web Calendar Contributors" },
]
maintainers = [
  { name="Nicco Kunzmann", email="niccokunzmann@rambler.ru" },
]
description = "Embed a highly customizable web calendar into your website using ICal source links"
readme = "README.md"
requires-python = ">=3.9"
# see https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Flask",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Natural Language :: English",
    "Natural Language :: Esperanto",
    "Natural Language :: French",
    "Natural Language :: German",
    "Natural Language :: Croatian",
    "Natural Language :: Indonesian",
    "Natural Language :: Italian",
    "Natural Language :: Indonesian",
    "Natural Language :: Norwegian",
    "Natural Language :: Polish",
    "Natural Language :: Norwegian",
    "Natural Language :: Spanish",
    "Natural Language :: Turkish",
    "Natural Language :: Chinese (Simplified)",  # TODO: Test that all languages of the UI are here
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Office/Business :: Scheduling",
]

dependencies = [
    "flask-caching",
    "flask-allowed-hosts",
    "flask",
    "icalendar",
    "requests",
    "requests[socks]",
    "pyyaml",
    "recurring-ical-events",
    "gunicorn",
    "lxml",
    "beautifulsoup4",
    "lxml_html_clean",
    "pytz",
]

[project.optional-dependencies]
test = [
    "pytest",
    "behave",
    "selenium",
]

#docs = [
#    "mkdocs-material",
#    "mkdocs-rss-plugin",
#    "mkdocs-git-revision-date-localized-plugin",
#    "mkdocs-material[imaging]",
#    "mkdocs-markdownextradata-plugin",
#    "mkdocs-macros-plugin",
#    "mkdocs[i18n]",
#    "mkdocs-meta-descriptions-plugin",
##mkdocs-mdpo-plugin
#    "mkdocs-mdpo-plugin @ git+https://github.com/niccokunzmann/mkdocs-mdpo-plugin.git@patch-1",
#    "mkdocs-material-relative-language-selector",
#    "mkdocs-exclude",
#]

[project.scripts]
open-web-calendar = "open_web_calendar:main"

[tool.hatch.metadata.hooks.vcs.urls]
#[project.urls]
Homepage = "https://open-web-calendar.hosted.quelltext.eu/"
Repository = "https://github.com/niccokunzmann/open-web-calendar/"
source_archive = "https://github.com/niccokunzmann/open-web-calendar/archive/{commit_hash}.zip"
Issues = "https://github.com/niccokunzmann/open-web-calendar/issues"
Documentation = "https://open-web-calendar.quelltext.eu/"
Changelog = "https://open-web-calendar.quelltext.eu/changelog/"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
# see https://github.com/ofek/hatch-vcs/issues/43#issuecomment-1553065222
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "open_web_calendar/_version.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",     # flake8-annotations
    "B020",    # Loop control variable {name} overrides iterable it iterates
    "C401",    # Unnecessary generator (rewrite as a set comprehension)
    "C901",    # {name} is too complex ({complexity} > {max_complexity})
    "COM812",  # Trailing comma missing
    "D1",      # Missing docstring
    "D2",      # docstrings stuffs
    "D4",      # docstrings stuffs
    "EM10",    # Exception string usage
    "ERA001",  # Found commented-out code
    "FBT002",  # Boolean default positional argument in function definition
    "FIX",     # TODO comments
    "ISC001",  # Implicitly concatenated string literals on one line (to avoid with formatter)
    "N818",    # Exception name {name} should be named with an Error suffix
    "PLR091",  # Too many things (complexity, arguments, branches, etc...)
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "RUF012",  # Mutable class attributes should be annotated with typing.ClassVar
    "RUF015",  # Prefer next({iterable}) over single element slice
    "S101",    # Use of assert detected
    "TD",      # TODO comments
    "TRY003",  # Avoid specifying long messages outside the exception class
    "S104",    # Possible binding to all interfaces
    "E722",    # Do not use bare `except`
    "RUF005",  # Consider iterable unpacking instead of concatenation
    "DTZ005",  # `datetime.datetime.now()` called without a `tz` argument
    "PERF401", # Use a list comprehension to create a transformed list
    "ARG002",  # Unused method argument: ...
    "ARG001",  # Unused function argument: ...
    "UP007",   # X | None
]
extend-safe-fixes = [
    "PT006", # Wrong type passed to first argument of @pytest.mark.parametrize; expected {expected_string}
]

[tool.ruff.lint.per-file-ignores]
"open_web_calendar/test/*" = [
    "B011",   # Do not assert False (python -O removes these calls), raise AssertionError()
    "DTZ001", # datetime.datetime() called without a tzinfo argument
    "E501",   # Indentation is not a multiple of {indent_size}
    "N802",   # Function name {name} should be lowercase
    "PT011",  # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "PT012",  # pytest.raises() block should contain a single simple statement
    "PT015",  # Assertion always fails, replace with pytest.fail()
    "T201",   # print found
    "T203",   # `pprint` found
    "RUF001", # String contains ambiguous character
]
"open_web_calendar/features/*" = [
    "F811",   # Redefinition of unused `step_impl` from line 52
    "T201",   # `print` found
]

"open_web_calendar/static/js/dhtmlx/locale/convert.py" = [
  "INP001",    # File `static/js/dhtmlx/locale/convert.py` is part of an implicit namespace package. Add an `__init__.py`
  "T201",      # print found
  "PTH123",
  "S307",
  "PTH103",
  "PLW2901"
]

"docs/hooks/set_canonical_url.py" = [
  "INP001"    # File `docs/hooks/set_canonical_url.py` is part of an implicit namespace package. Add an `__init__.py`.
]
